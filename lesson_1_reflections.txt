1.) How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me focus on a narrower margin of code and easily identify what she changed.

2.) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Most code starts out small, so it will allow you to see what it was originally intended to it and any improvements made over time.
Also if you made a big mistake its not so bad if you can just revert back to a previous file.

3.) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: all the commits will have a purpose and won't be incomplete if you commit significant changes. They will be easier to read and won't be as cluttered as automatic systems.

Cons: prone to user error, if you forgot to commit changes and commit one big change it may prove confusing later on the things you changed.

4.) Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately? 

Git tracks multiple files because changes in one file are often accomplished by changing code in other files as well which is important to consider when coding. Google Doc's treats file
s separately because more often than not, they are unrelated to eachother and makes more sense to do so.

5.) How can you use the commands git log and git diff to view the history of files?

You can use git log to get the id author and date of all commits in the repository, and you can use git diff to see all of the changes made, and you can
even color code it to make it easier to understand!

6.) Now that you have your workspace set up, what do you want to try using Git for?

I want to use it to contribute to open source projects, help build Aunt Pam's website!, and create my own coding projects!
6.) How might using version control make you more confident to make changes that could break something?

I would know that even if i broke somehting I could also go back to a previous version and see what is wrong without having to worry about completely ruining the code I am working on!

